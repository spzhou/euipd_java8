<?xml version="1.0" encoding="UTF-8"?>
<!--
Author：周朔鹏
编制时间：2025-08-05
电子邮件：391902958@qq.com
项目官网：https://www.euipd.com
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.server.mapper.InstitutionMapper">
  <resultMap id="BaseResultMap" type="com.course.server.domain.Institution">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="slogan" jdbcType="VARCHAR" property="slogan" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="video" jdbcType="VARCHAR" property="video" />
    <result column="vod" jdbcType="VARCHAR" property="vod" />
    <result column="level" jdbcType="CHAR" property="level" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="creator_loginname" jdbcType="VARCHAR" property="creatorLoginname" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="collect" jdbcType="INTEGER" property="collect" />
    <result column="watch" jdbcType="INTEGER" property="watch" />
    <result column="power" jdbcType="INTEGER" property="power" />
    <result column="promotion" jdbcType="INTEGER" property="promotion" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="contact_avatar" jdbcType="VARCHAR" property="contactAvatar" />
    <result column="contact_qr_code" jdbcType="VARCHAR" property="contactQrCode" />
    <result column="org_link" jdbcType="VARCHAR" property="orgLink" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, slogan, image, video, vod, `level`, `status`, sort, created_at, updated_at, 
    creator_loginname, `like`, `collect`, watch, `power`, promotion, contact, phone, 
    address, logo, contact_avatar, contact_qr_code, org_link
  </sql>
  <select id="selectByExample" parameterType="com.course.server.domain.InstitutionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from institution
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from institution
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.course.server.domain.InstitutionExample">
    delete from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.server.domain.Institution">
    insert into institution (id, `name`, slogan, 
      image, video, vod, 
      `level`, `status`, sort, created_at, 
      updated_at, creator_loginname, `like`, 
      `collect`, watch, `power`, 
      promotion, contact, phone, 
      address, logo, contact_avatar, 
      contact_qr_code, org_link)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{slogan,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{video,jdbcType=VARCHAR}, #{vod,jdbcType=VARCHAR}, 
      #{level,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{sort,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{creatorLoginname,jdbcType=VARCHAR}, #{like,jdbcType=INTEGER}, 
      #{collect,jdbcType=INTEGER}, #{watch,jdbcType=INTEGER}, #{power,jdbcType=INTEGER}, 
      #{promotion,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{contactAvatar,jdbcType=VARCHAR}, 
      #{contactQrCode,jdbcType=VARCHAR}, #{orgLink,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.course.server.domain.Institution">
    insert into institution
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="slogan != null">
        slogan,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="video != null">
        video,
      </if>
      <if test="vod != null">
        vod,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="creatorLoginname != null">
        creator_loginname,
      </if>
      <if test="like != null">
        `like`,
      </if>
      <if test="collect != null">
        `collect`,
      </if>
      <if test="watch != null">
        watch,
      </if>
      <if test="power != null">
        `power`,
      </if>
      <if test="promotion != null">
        promotion,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="contactAvatar != null">
        contact_avatar,
      </if>
      <if test="contactQrCode != null">
        contact_qr_code,
      </if>
      <if test="orgLink != null">
        org_link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="slogan != null">
        #{slogan,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="video != null">
        #{video,jdbcType=VARCHAR},
      </if>
      <if test="vod != null">
        #{vod,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorLoginname != null">
        #{creatorLoginname,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=INTEGER},
      </if>
      <if test="watch != null">
        #{watch,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        #{power,jdbcType=INTEGER},
      </if>
      <if test="promotion != null">
        #{promotion,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="contactAvatar != null">
        #{contactAvatar,jdbcType=VARCHAR},
      </if>
      <if test="contactQrCode != null">
        #{contactQrCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLink != null">
        #{orgLink,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.course.server.domain.InstitutionExample" resultType="java.lang.Long">
    select count(*) from institution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update institution
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.slogan != null">
        slogan = #{record.slogan,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.video != null">
        video = #{record.video,jdbcType=VARCHAR},
      </if>
      <if test="record.vod != null">
        vod = #{record.vod,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorLoginname != null">
        creator_loginname = #{record.creatorLoginname,jdbcType=VARCHAR},
      </if>
      <if test="record.like != null">
        `like` = #{record.like,jdbcType=INTEGER},
      </if>
      <if test="record.collect != null">
        `collect` = #{record.collect,jdbcType=INTEGER},
      </if>
      <if test="record.watch != null">
        watch = #{record.watch,jdbcType=INTEGER},
      </if>
      <if test="record.power != null">
        `power` = #{record.power,jdbcType=INTEGER},
      </if>
      <if test="record.promotion != null">
        promotion = #{record.promotion,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.contactAvatar != null">
        contact_avatar = #{record.contactAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.contactQrCode != null">
        contact_qr_code = #{record.contactQrCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orgLink != null">
        org_link = #{record.orgLink,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update institution
    set id = #{record.id,jdbcType=CHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      slogan = #{record.slogan,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      video = #{record.video,jdbcType=VARCHAR},
      vod = #{record.vod,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=CHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      creator_loginname = #{record.creatorLoginname,jdbcType=VARCHAR},
      `like` = #{record.like,jdbcType=INTEGER},
      `collect` = #{record.collect,jdbcType=INTEGER},
      watch = #{record.watch,jdbcType=INTEGER},
      `power` = #{record.power,jdbcType=INTEGER},
      promotion = #{record.promotion,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      contact_avatar = #{record.contactAvatar,jdbcType=VARCHAR},
      contact_qr_code = #{record.contactQrCode,jdbcType=VARCHAR},
      org_link = #{record.orgLink,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.server.domain.Institution">
    update institution
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="slogan != null">
        slogan = #{slogan,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="video != null">
        video = #{video,jdbcType=VARCHAR},
      </if>
      <if test="vod != null">
        vod = #{vod,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorLoginname != null">
        creator_loginname = #{creatorLoginname,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        `like` = #{like,jdbcType=INTEGER},
      </if>
      <if test="collect != null">
        `collect` = #{collect,jdbcType=INTEGER},
      </if>
      <if test="watch != null">
        watch = #{watch,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        `power` = #{power,jdbcType=INTEGER},
      </if>
      <if test="promotion != null">
        promotion = #{promotion,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="contactAvatar != null">
        contact_avatar = #{contactAvatar,jdbcType=VARCHAR},
      </if>
      <if test="contactQrCode != null">
        contact_qr_code = #{contactQrCode,jdbcType=VARCHAR},
      </if>
      <if test="orgLink != null">
        org_link = #{orgLink,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.server.domain.Institution">
    update institution
    set `name` = #{name,jdbcType=VARCHAR},
      slogan = #{slogan,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      video = #{video,jdbcType=VARCHAR},
      vod = #{vod,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=CHAR},
      `status` = #{status,jdbcType=CHAR},
      sort = #{sort,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      creator_loginname = #{creatorLoginname,jdbcType=VARCHAR},
      `like` = #{like,jdbcType=INTEGER},
      `collect` = #{collect,jdbcType=INTEGER},
      watch = #{watch,jdbcType=INTEGER},
      `power` = #{power,jdbcType=INTEGER},
      promotion = #{promotion,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      contact_avatar = #{contactAvatar,jdbcType=VARCHAR},
      contact_qr_code = #{contactQrCode,jdbcType=VARCHAR},
      org_link = #{orgLink,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>