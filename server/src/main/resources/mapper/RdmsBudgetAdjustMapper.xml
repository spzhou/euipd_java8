<?xml version="1.0" encoding="UTF-8"?>
<!--
Author：周朔鹏
编制时间：2025-08-05
电子邮件：391902958@qq.com
项目官网：https://www.euipd.com
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.server.mapper.RdmsBudgetAdjustMapper">
  <resultMap id="BaseResultMap" type="com.course.server.domain.RdmsBudgetAdjust">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="budget_id" jdbcType="CHAR" property="budgetId" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="project_id" jdbcType="CHAR" property="projectId" />
    <result column="target_project_id" jdbcType="CHAR" property="targetProjectId" />
    <result column="pre_project_id" jdbcType="CHAR" property="preProjectId" />
    <result column="budget_subject" jdbcType="VARCHAR" property="budgetSubject" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="file_ids_str" jdbcType="VARCHAR" property="fileIdsStr" />
    <result column="approval_opinion" jdbcType="VARCHAR" property="approvalOpinion" />
    <result column="applicant_id" jdbcType="CHAR" property="applicantId" />
    <result column="approver_id" jdbcType="CHAR" property="approverId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, title, budget_id, customer_id, project_id, target_project_id, pre_project_id, 
    budget_subject, `type`, amount, reason, file_ids_str, approval_opinion, applicant_id, 
    approver_id, `status`, update_time, create_time, deleted
  </sql>
  <select id="selectByExample" parameterType="com.course.server.domain.RdmsBudgetAdjustExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rdms_budget_adjust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rdms_budget_adjust
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rdms_budget_adjust
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.course.server.domain.RdmsBudgetAdjustExample">
    delete from rdms_budget_adjust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.server.domain.RdmsBudgetAdjust">
    insert into rdms_budget_adjust (id, code, title, budget_id, 
      customer_id, project_id, target_project_id, 
      pre_project_id, budget_subject, `type`, 
      amount, reason, file_ids_str, 
      approval_opinion, applicant_id, approver_id, 
      `status`, update_time, create_time, 
      deleted)
    values (#{id,jdbcType=CHAR}, #{code,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{budgetId,jdbcType=CHAR}, 
      #{customerId,jdbcType=CHAR}, #{projectId,jdbcType=CHAR}, #{targetProjectId,jdbcType=CHAR}, 
      #{preProjectId,jdbcType=CHAR}, #{budgetSubject,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, #{fileIdsStr,jdbcType=VARCHAR}, 
      #{approvalOpinion,jdbcType=VARCHAR}, #{applicantId,jdbcType=CHAR}, #{approverId,jdbcType=CHAR}, 
      #{status,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.course.server.domain.RdmsBudgetAdjust">
    insert into rdms_budget_adjust
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="budgetId != null">
        budget_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="targetProjectId != null">
        target_project_id,
      </if>
      <if test="preProjectId != null">
        pre_project_id,
      </if>
      <if test="budgetSubject != null">
        budget_subject,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="fileIdsStr != null">
        file_ids_str,
      </if>
      <if test="approvalOpinion != null">
        approval_opinion,
      </if>
      <if test="applicantId != null">
        applicant_id,
      </if>
      <if test="approverId != null">
        approver_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="budgetId != null">
        #{budgetId,jdbcType=CHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=CHAR},
      </if>
      <if test="targetProjectId != null">
        #{targetProjectId,jdbcType=CHAR},
      </if>
      <if test="preProjectId != null">
        #{preProjectId,jdbcType=CHAR},
      </if>
      <if test="budgetSubject != null">
        #{budgetSubject,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="fileIdsStr != null">
        #{fileIdsStr,jdbcType=VARCHAR},
      </if>
      <if test="approvalOpinion != null">
        #{approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="applicantId != null">
        #{applicantId,jdbcType=CHAR},
      </if>
      <if test="approverId != null">
        #{approverId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.course.server.domain.RdmsBudgetAdjustExample" resultType="java.lang.Long">
    select count(*) from rdms_budget_adjust
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rdms_budget_adjust
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetId != null">
        budget_id = #{record.budgetId,jdbcType=CHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=CHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=CHAR},
      </if>
      <if test="record.targetProjectId != null">
        target_project_id = #{record.targetProjectId,jdbcType=CHAR},
      </if>
      <if test="record.preProjectId != null">
        pre_project_id = #{record.preProjectId,jdbcType=CHAR},
      </if>
      <if test="record.budgetSubject != null">
        budget_subject = #{record.budgetSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.fileIdsStr != null">
        file_ids_str = #{record.fileIdsStr,jdbcType=VARCHAR},
      </if>
      <if test="record.approvalOpinion != null">
        approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantId != null">
        applicant_id = #{record.applicantId,jdbcType=CHAR},
      </if>
      <if test="record.approverId != null">
        approver_id = #{record.approverId,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rdms_budget_adjust
    set id = #{record.id,jdbcType=CHAR},
      code = #{record.code,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      budget_id = #{record.budgetId,jdbcType=CHAR},
      customer_id = #{record.customerId,jdbcType=CHAR},
      project_id = #{record.projectId,jdbcType=CHAR},
      target_project_id = #{record.targetProjectId,jdbcType=CHAR},
      pre_project_id = #{record.preProjectId,jdbcType=CHAR},
      budget_subject = #{record.budgetSubject,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      file_ids_str = #{record.fileIdsStr,jdbcType=VARCHAR},
      approval_opinion = #{record.approvalOpinion,jdbcType=VARCHAR},
      applicant_id = #{record.applicantId,jdbcType=CHAR},
      approver_id = #{record.approverId,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.server.domain.RdmsBudgetAdjust">
    update rdms_budget_adjust
    <set>
      <if test="code != null">
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="budgetId != null">
        budget_id = #{budgetId,jdbcType=CHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=CHAR},
      </if>
      <if test="targetProjectId != null">
        target_project_id = #{targetProjectId,jdbcType=CHAR},
      </if>
      <if test="preProjectId != null">
        pre_project_id = #{preProjectId,jdbcType=CHAR},
      </if>
      <if test="budgetSubject != null">
        budget_subject = #{budgetSubject,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="fileIdsStr != null">
        file_ids_str = #{fileIdsStr,jdbcType=VARCHAR},
      </if>
      <if test="approvalOpinion != null">
        approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="applicantId != null">
        applicant_id = #{applicantId,jdbcType=CHAR},
      </if>
      <if test="approverId != null">
        approver_id = #{approverId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.server.domain.RdmsBudgetAdjust">
    update rdms_budget_adjust
    set code = #{code,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      budget_id = #{budgetId,jdbcType=CHAR},
      customer_id = #{customerId,jdbcType=CHAR},
      project_id = #{projectId,jdbcType=CHAR},
      target_project_id = #{targetProjectId,jdbcType=CHAR},
      pre_project_id = #{preProjectId,jdbcType=CHAR},
      budget_subject = #{budgetSubject,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      file_ids_str = #{fileIdsStr,jdbcType=VARCHAR},
      approval_opinion = #{approvalOpinion,jdbcType=VARCHAR},
      applicant_id = #{applicantId,jdbcType=CHAR},
      approver_id = #{approverId,jdbcType=CHAR},
      `status` = #{status,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>