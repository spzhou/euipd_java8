<?xml version="1.0" encoding="UTF-8"?>
<!--
Author：周朔鹏
编制时间：2025-08-05
电子邮件：391902958@qq.com
项目官网：https://www.euipd.com
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.server.mapper.RdmsFunctionTreeMapper">
  <resultMap id="BaseResultMap" type="com.course.server.domain.RdmsFunctionTree">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="parent" jdbcType="CHAR" property="parent" />
    <result column="deep" jdbcType="INTEGER" property="deep" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="writer_id" jdbcType="CHAR" property="writerId" />
    <result column="preproject_id" jdbcType="CHAR" property="preprojectId" />
    <result column="project_type" jdbcType="VARCHAR" property="projectType" />
    <result column="job_type" jdbcType="VARCHAR" property="jobType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="aux_status" jdbcType="VARCHAR" property="auxStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent, deep, code, `name`, writer_id, preproject_id, project_type, job_type, 
    `status`, aux_status, create_time, deleted
  </sql>
  <select id="selectByExample" parameterType="com.course.server.domain.RdmsFunctionTreeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rdms_function_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rdms_function_tree
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rdms_function_tree
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.course.server.domain.RdmsFunctionTreeExample">
    delete from rdms_function_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.server.domain.RdmsFunctionTree">
    insert into rdms_function_tree (id, parent, deep, code, 
      `name`, writer_id, preproject_id, 
      project_type, job_type, `status`, 
      aux_status, create_time, deleted
      )
    values (#{id,jdbcType=CHAR}, #{parent,jdbcType=CHAR}, #{deep,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{writerId,jdbcType=CHAR}, #{preprojectId,jdbcType=CHAR}, 
      #{projectType,jdbcType=VARCHAR}, #{jobType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{auxStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.course.server.domain.RdmsFunctionTree">
    insert into rdms_function_tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="deep != null">
        deep,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="writerId != null">
        writer_id,
      </if>
      <if test="preprojectId != null">
        preproject_id,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="auxStatus != null">
        aux_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=CHAR},
      </if>
      <if test="deep != null">
        #{deep,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="writerId != null">
        #{writerId,jdbcType=CHAR},
      </if>
      <if test="preprojectId != null">
        #{preprojectId,jdbcType=CHAR},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="auxStatus != null">
        #{auxStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.course.server.domain.RdmsFunctionTreeExample" resultType="java.lang.Long">
    select count(*) from rdms_function_tree
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rdms_function_tree
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=CHAR},
      </if>
      <if test="record.deep != null">
        deep = #{record.deep,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.writerId != null">
        writer_id = #{record.writerId,jdbcType=CHAR},
      </if>
      <if test="record.preprojectId != null">
        preproject_id = #{record.preprojectId,jdbcType=CHAR},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.auxStatus != null">
        aux_status = #{record.auxStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rdms_function_tree
    set id = #{record.id,jdbcType=CHAR},
      parent = #{record.parent,jdbcType=CHAR},
      deep = #{record.deep,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      writer_id = #{record.writerId,jdbcType=CHAR},
      preproject_id = #{record.preprojectId,jdbcType=CHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      aux_status = #{record.auxStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.server.domain.RdmsFunctionTree">
    update rdms_function_tree
    <set>
      <if test="parent != null">
        parent = #{parent,jdbcType=CHAR},
      </if>
      <if test="deep != null">
        deep = #{deep,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="writerId != null">
        writer_id = #{writerId,jdbcType=CHAR},
      </if>
      <if test="preprojectId != null">
        preproject_id = #{preprojectId,jdbcType=CHAR},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="auxStatus != null">
        aux_status = #{auxStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.server.domain.RdmsFunctionTree">
    update rdms_function_tree
    set parent = #{parent,jdbcType=CHAR},
      deep = #{deep,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      writer_id = #{writerId,jdbcType=CHAR},
      preproject_id = #{preprojectId,jdbcType=CHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      aux_status = #{auxStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>